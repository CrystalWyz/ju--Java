<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>cn.wyz</groupId>
        <artifactId>ju--java</artifactId>
        <version>0.0.3-SNAPSHOT</version>
    </parent>

    <artifactId>app</artifactId>

    <dependencies>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-to-slf4j</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
        </dependency>

        <dependency>
            <groupId>cn.wyz</groupId>
            <artifactId>internal-common</artifactId>
        </dependency>

        <dependency>
            <groupId>cn.wyz</groupId>
            <artifactId>mapper</artifactId>
        </dependency>


        <dependency>
            <groupId>cn.wyz</groupId>
            <artifactId>service-user</artifactId>
        </dependency>

        <dependency>
            <groupId>cn.wyz</groupId>
            <artifactId>murder-mystery</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!--项目的启动类-->
                    <!--                    <mainClass>ai.coevolution.wcs.server.WcsApplication</mainClass>-->
                    <!--解决windows命令行窗口中文乱码-->
                    <jvmArguments>-Dfile.encoding=UTF-8</jvmArguments>
                    <layout>ZIP</layout>
                    <!--配置需要打包进项目的jar-->
                    <includes>
                        <!--如果没有则non-exists, 表示不打包-->
                        <include>
                            <groupId>non-exists</groupId>
                            <artifactId>non-exists</artifactId>
                        </include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-lib</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/ju/lib</outputDirectory>
                            <excludeTransitive>false</excludeTransitive>
                            <stripVersion>false</stripVersion>
                            <includeScope>runtime</includeScope>
                            <excludeGroupIds>cn.wyz</excludeGroupIds>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-celib</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/ju/celib</outputDirectory>
                            <excludeTransitive>false</excludeTransitive>
                            <stripVersion>false</stripVersion>
                            <includeScope>runtime</includeScope>
                            <includeGroupIds>cn.wyz</includeGroupIds>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-app</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/ju/</outputDirectory>
                            <stripVersion>false</stripVersion>
                            <artifact>${project.groupId}:${project.artifactId}:${project.version}</artifact>
                        </configuration>
                    </execution>
                    <!--                    <execution>-->
                    <!--                        <id>unpack</id>-->
                    <!--                        <phase>prepare-package</phase>-->
                    <!--                        <goals>-->
                    <!--                            <goal>unpack</goal>-->
                    <!--                        </goals>-->
                    <!--                        <configuration>-->
                    <!--                            <artifactItems>-->
                    <!--                                <artifactItem>-->
                    <!--                                    <groupId>cn.wyz</groupId>-->
                    <!--                                    <artifactId>app</artifactId>-->
                    <!--                                    <type>jar</type>-->
                    <!--                                    <outputDirectory>${project.build.directory}/app</outputDirectory>-->
                    <!--                                </artifactItem>-->
                    <!--                            </artifactItems>-->
                    <!--                        </configuration>-->
                    <!--                    </execution>-->

                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${project.build.directory}/ju/logs"/>
                                <copy todir="${project.build.directory}/ju/bin" overwrite="true">
                                    <fileset dir="../bin/" erroronmissingdir="false">
                                        <include name="*"/>
                                    </fileset>
                                </copy>
                                <copy todir="${project.build.directory}/ju/config/" overwrite="true">
                                    <fileset dir="../config/" erroronmissingdir="false">
                                        <include name="**"/>
                                    </fileset>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- 指定上传代码到服务器上 -->
            <id>upload</id>
            <build>
                <plugins>
                    <!-- Exec 插件配置 -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>run-custom-script</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <!-- 自定义 shell 命令 -->
                                    <executable>sh</executable>
                                    <workingDirectory>${project.build.directory}/../../script</workingDirectory>
                                    <arguments>
                                        <argument>upload.sh</argument>
                                        <argument>${server.ip}</argument>
                                        <argument>${server.port}</argument>
                                        <argument>${server.user}</argument>
                                        <argument>${server.password}</argument>
                                        <argument>${project.build.directory}/</argument>
                                        <argument>${server.target.path}</argument>
                                        <argument></argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


</project>